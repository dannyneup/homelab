services:
  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    volumes:
      - ${CONTAINER_DATA_DIRECTORY}/paperless-ngx/data:/usr/src/paperless/data
      - ${CONTAINER_DATA_DIRECTORY}/paperless-ngx/media:/usr/src/paperless/media
    environment:
      PAPERLESS_URL: paperless.neukoch.com
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBHOST: postgres
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: ${POSTGRES_USERNAME}
      PAPERLESS_DBPASS: ${POSTGRES_PASSWORD}
      PAPERLESS_ADMIN_USER: ${ADMIN_USERNAME}
      PAPERLESS_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    labels:
      traefik.enable: true
      traefik.http.routers.paperless.rule: Host(`paperless.neukoch.com`)
      traefik.http.services.paperless.loadbalancer.server.port: 8000
    networks:
      - paperless
      - proxy

  redis:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - ${CONTAINER_DATA_DIRECTORY}/paperless-ngx/redis/data:/data
    networks:
      - paperless

  postgres:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - ${CONTAINER_DATA_DIRECTORY}/paperless-ngx/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - paperless

networks:
  paperless:
  proxy:
    external: true